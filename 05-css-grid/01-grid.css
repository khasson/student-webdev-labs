.grid-container {
  background-color: rgb(190, 190, 231);
}

/* Grid Container 1 */
.grid-container {
  display: grid;
  gap: 10px; /* This adds spacing between grid items */
  background-color: rgb(190, 190, 231);
}

.grid-container-1 {
  height: 400px;
  grid-template-columns: 1fr 2fr 2fr; /* Column 1 is half the width of Columns 2 and 3 */
  grid-template-rows: repeat(3, 1fr); /* Creates three rows of equal height */
}

/* Assign grid items to their positions */
.item1 {
  grid-area: 1 / 1 / 2 / 2;
}
.item2 {
  grid-area: 1 / 2 / 2 / 3;
}
.item3 {
  grid-area: 1 / 3 / 2 / 4;
}
.item4 {
  grid-area: 2 / 1 / 3 / 2;
}
.item5 {
  grid-area: 2 / 2 / 3 / 3;
}
.item6 {
  grid-area: 2 / 3 / 3 / 4;
}
.item7 {
  grid-area: 3 / 1 / 4 / 2;
}
.item8 {
  grid-area: 3 / 2 / 4 / 3;
}
/* Grid Container 2 */
.grid-container-2 {
  display: grid;
  height: 400px;
  grid-template-columns: 1fr 2fr 1fr 1fr; /* Columns 1, 3, and 4 are half the size of Column 2 */
  grid-template-rows: 1fr 5fr; /* Row 1 is 1/5th the height of Row 2 */
  gap: 10px;
}
/* Assign grid items to their positions for Grid Container 2 */
.grid-container-2 .item1 {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}
.grid-container-2 .item2 {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}
.grid-container-2 .item3 {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}
.grid-container-2 .item4 {
  grid-column: 4 / 5;
  grid-row: 1 / 2;
}
.grid-container-2 .item5 {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}
.grid-container-2 .item6 {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}
.grid-container-2 .item7 {
  grid-column: 3 / 4;
  grid-row: 2 / 3;
}
.grid-container-2 .item8 {
  grid-column: 4 / 5;
  grid-row: 2 / 3;
}
/* use height: 400px; on the container */

/* Grid Container 3 */
.grid-container-3 {
  display: grid;
  height: 400px;
  grid-template-columns: 1fr 2fr 2fr; /* Column 1 is half the width of Columns 2 and 3 */
  grid-template-rows: 1fr 2fr 2fr; /* Row 1 is half the height of Rows 2 and 3 */
  gap: 10px;
}

.grid-container-3 .item1 {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}
.grid-container-3 .item2 {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}
.grid-container-3 .item3 {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}
.grid-container-3 .item4 {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}
.grid-container-3 .item5 {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}
.grid-container-3 .item6 {
  grid-column: 3 / 4;
  grid-row: 2 / 3;
}
.grid-container-3 .item7 {
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}
.grid-container-3 .item8 {
  grid-column: 2 / 4;
  grid-row: 3 / 4;
}

/* use height: 400px; on the container */

/* Grid Container 4 */
.grid-container-4 {
  display: grid;
  height: 600px;
  grid-template-columns: 1fr 2fr; /* Column 1 is half the size of Column 2 */
  grid-template-rows: 0.5fr 0.5fr 1.5fr 3fr 1fr; /* Explicitly setting the size of each row */
  gap: 10px;
}

.grid-container-4 .item1 {
  grid-column: 1 / 2;
  grid-row: 1 / 3;
} /* Item 1 spans two rows */
.grid-container-4 .item2 {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}
.grid-container-4 .item3 {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}
.grid-container-4 .item4 {
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}
.grid-container-4 .item5 {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}
.grid-container-4 .item6 {
  grid-column: 1 / 3;
  grid-row: 4 / 5;
} /* Item 6 spans both columns */
.grid-container-4 .item7 {
  grid-column: 1 / 2;
  grid-row: 5 / 6;
}
.grid-container-4 .item8 {
  grid-column: 2 / 3;
  grid-row: 5 / 6;
}

/* use height: 600px; on the container */
